//- Copyright (C) 2017 Alexandre Pielucha & Marie Perin
//- 
//- Permission to use, copy, modify, and/or distribute this software for any
//- purpose with or without fee is hereby granted, provided that the above
//- copyright notice and this permission notice appear in all copies.
//- 
//- THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
//- WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
//- MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
//- ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
//- WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
//- OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
//- CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

extends layout

block title
    title SkiPerf - Dashboard
    
block styles
    link(rel='stylesheet', href='/css/website.css')
    
block js-libraries
    script(src='https://d3js.org/d3.v4.min.js')
    script(src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"
        integrity="sha256-eGE6blurk5sHj+rmkfsGYeKyZx3M4bG+ZlFyA7Kns7E="
        crossorigin="anonymous")

block content
    nav.navbar.navbar-dark.bg-dark.navbar-expand-md
        div.container
            a.navbar-brand(href='/') SkiPerf
            span.navbar-text #{user.fullname}
            span#userID(style='display:none') #{user.id}
            
    div.sidebar.bg-dark
        ul.nav.nav-sidebar
            li
                a.text-center(href='/')
                    i.fa.fa-area-chart(aria-hidden='true')
            li
                a.text-center(href='#')
                    i.fa.fa-cogs(aria-hidden='true')
            li
                a.text-center(href='/logout')
                    i.fa.fa-sign-out(aria-hidden='true')
    
    main
        h2.sub-header Dashboard
        
        .container-fluid
            .row.add-metrics
                input(type='number' name='value' placeholder="Today's top speed")
                button.btn-primary Submit
            
            div.row
                svg(width="1000", height="300")
                
block scripts
    script
        :coffee-script
            $('.add-metrics>button').click () ->
                userID = $('#userID').text()
                input = $(this).parent().find('input')
                val = input.val()
                
                if (!val? || val=='')
                    alert('You must enter a value !')
                else
                    $.post '/api/users/' + userID + '/metrics',
                        value: val
                    
                    input.css('background-color', '#007bff')
                    input.animate({
                        backgroundColor: '#EEE'
                    }, 800)

    script
        :coffee-script
            margin =
                top: 20
                right: 20
                bottom: 30
                left: 50
            width = 1000 - margin.left - margin.right
            height = 300 - margin.top - margin.bottom
            
            x = d3.scaleTime().range([ 0, width ])
            y = d3.scaleLinear().range([ height, 0 ])
            
            valueline = d3.line()
                .x((d) -> return x(d.timestamp))
                .y((d) -> return y(d.value))
            
            svg = d3.select('svg')
                .append('g')
                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
            
            draw = (data) ->
                for d in data
                    d.timestamp = +d.timestamp
                    d.value = +d.value
                
                data.sort (a, b) ->
                    a.timestamp - b.timestamp
                
                x.domain d3.extent data, (d) ->
                    d.timestamp
                y.domain [0, d3.max data, (d) ->
                    d.value
                ]
                
                svg.append('path')
                    .data([ data ])
                    .attr('class', 'line')
                    .attr('d', valueline);
                
                svg.append('g')
                    .attr('transform', 'translate(0,' + height + ')')
                    .call(d3.axisBottom(x));
                
                svg.append('g')
                    .call(d3.axisLeft(y));              
            
            d3.json '/api/users/1/metrics', (error, data) -> 
                throw error if error
                draw(data)
