//- Copyright (C) 2017 Alexandre Pielucha & Marie Perin
//- 
//- Permission to use, copy, modify, and/or distribute this software for any
//- purpose with or without fee is hereby granted, provided that the above
//- copyright notice and this permission notice appear in all copies.
//- 
//- THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
//- WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
//- MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
//- ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
//- WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
//- OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
//- CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

extends layout

block title
    title MyPerfs
    
block styles
    link(rel='stylesheet', href='/css/website.css')
    
block js-libraries
    script(src="https://d3js.org/d3.v4.min.js")

block content
    nav.navbar.navbar-dark.bg-dark.navbar-expand-md
        div.container
            a.navbar-brand(href="#") SkiPerf
    
    div.container-fluid
        div.row
            div.sidebar.bg-dark
                ul.nav.nav-sidebar
                    li
                        a.text-center(href="#")
                            i.fa.fa-area-chart(aria-hidden="true")
                    li
                        a.text-center(href="#")
                            i.fa.fa-sign-out(aria-hidden="true")
                    li
                        a.text-center(href="#")
                            i.fa.fa-cogs(aria-hidden="true")
                    
            div.main
                h2.sub-header Dashboard
                form.form-inline(action="/api/metrics" method="post")
                    div.form-group.speed
                        input.form-control(type="number" name="speed" placeholder="Max speed")
                    input.btn.btn-dark.speed(type="submit" value="Submit")
                svg(width="960", height="500")
                
block scripts
    script
        :coffee-script
            $.get "/metrics.json", (data, status) ->
                
                margin = {top: 20, right: 20, bottom: 30, left: 50}
                width = 960 - margin.left - margin.right
                height = 500 - margin.top - margin.bottom

                parseTime = d3.timeParse("%d-%b-%y");

                x = d3.scaleTime().range([0, width])
                y = d3.scaleLinear().range([height, 0])

                valueline = d3.line()
                    .x((d) ->  return x(d.timestamp) )
                    .y((d) ->  return y(d.value) )
                  
                
                svg = d3.select("svg").append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                  .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")

                draw= (data) ->
                  for d in data
                      (d) -> 
                          d.timestamp = parseTime(d.timestamp)
                          d.value = +d.value
                  
                  data.sort((a, b) ->
                    return a["timestamp"]-b["timestamp"];
                  )
                 
                  x.domain(d3.extent(data, (d) ->
                    return d.timestamp; ));
                  y.domain([0, d3.max(data, (d) ->
                    return d.value; )]);
                  
                  svg.append("path")
                      .data([data])
                      .attr("class", "line")
                      .attr("d", valueline);
                      
                  svg.append("g")
                      .attr("transform", "translate(0," + height + ")")
                      .call(d3.axisBottom(x));

                  svg.append("g")
                      .call(d3.axisLeft(y));              
                  
                d3.json("metrics.json", (error, data) -> 
                  throw error if error
                  draw(data)
                )
